{"version":3,"file":"dva-model-creator.js","sources":["../node_modules/tiny-warning/dist/tiny-warning.esm.js","../src/actionCreatorFactory.ts","../src/index.ts"],"sourcesContent":["var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n","export interface AnyAction {\n  type: any;\n}\n\nexport type Meta = null | { [key: string]: any };\n\nexport interface Action<Payload> extends AnyAction {\n  type: string;\n  payload: Payload;\n  error?: boolean;\n  meta?: Meta;\n}\n\n/**\n * Returns `true` if action has the same type as action creator.\n * Defines Type Guard that lets TypeScript know `payload` type inside blocks\n * where `isType` returned `true`.\n *\n * @example\n *\n *    const somethingHappened =\n *      actionCreator<{foo: string}>('SOMETHING_HAPPENED');\n *\n *    if (isType(action, somethingHappened)) {\n *      // action.payload has type {foo: string}\n *    }\n */\nexport function isType<Payload>(\n  action: AnyAction,\n  actionCreator: ActionCreator<Payload>\n): action is Action<Payload> {\n  return action.type === actionCreator.type;\n}\n\ntype VoidToOptional<P> = P extends void ? P | undefined : P;\n\nexport type ActionCreator<Payload> = {\n  type: string;\n  originType: string;\n  match: (action: AnyAction) => action is Action<Payload>;\n  (payload: VoidToOptional<Payload>, meta?: Meta): Action<Payload>;\n};\n\ntype OptionalParams<Params> = Params extends void\n  ? {\n      params?: Params;\n    }\n  : {\n      params: Params;\n    };\n\ntype OptionalResult<Result> = Result extends void\n  ? {\n      result?: Result;\n    }\n  : {\n      result: Result;\n    };\n\nexport type Success<Params, Result> = OptionalResult<Result> & OptionalParams<Params>;\n\nexport type Failure<Params, Error> = {\n  error: Error;\n} & OptionalParams<Params>;\n\nexport interface AsyncActionCreators<Params, Result, Error = {}> {\n  type: string;\n  started: ActionCreator<Params>;\n  done: ActionCreator<Success<Params, Result>>;\n  failed: ActionCreator<Failure<Params, Error>>;\n}\n\nexport interface ActionCreatorFactory {\n  <Payload = void>(type: string, commonMeta?: Meta, isError?: boolean): ActionCreator<Payload>;\n\n  <Payload = void>(\n    type: string,\n    commonMeta?: Meta,\n    isError?: (payload: Payload) => boolean\n  ): ActionCreator<Payload>;\n\n  async<Params, Result, Error = {}>(\n    type: string,\n    commonMeta?: Meta\n  ): AsyncActionCreators<Params, Result, Error>;\n}\n\ndeclare const process: {\n  env: {\n    NODE_ENV?: string;\n  };\n};\n\nexport function actionCreatorFactory(\n  prefix?: string | null,\n  defaultIsError: (payload: any) => boolean = p => p instanceof Error\n): ActionCreatorFactory {\n  const actionTypes: { [type: string]: boolean } = {};\n\n  const base = prefix ? `${prefix}/` : '';\n\n  function actionCreator<Payload>(\n    type: string,\n    commonMeta?: Meta,\n    isError: ((payload: Payload) => boolean) | boolean = defaultIsError\n  ) {\n    const fullType = base + type;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (actionTypes[fullType]) throw new Error(`Duplicate action type: ${fullType}`);\n\n      actionTypes[fullType] = true;\n    }\n\n    return Object.assign(\n      (payload: Payload, meta?: Meta) => {\n        const action: Action<Payload> = {\n          type: fullType,\n          payload,\n        };\n\n        if (commonMeta || meta) {\n          action.meta = Object.assign({}, commonMeta, meta);\n        }\n\n        if (isError && (typeof isError === 'boolean' || isError(payload))) {\n          action.error = true;\n        }\n\n        return action;\n      },\n      {\n        type: fullType,\n        toString: () => fullType,\n        originType: type,\n        match: (action: AnyAction): action is Action<Payload> => action.type === fullType,\n      }\n    ) as ActionCreator<Payload>;\n  }\n\n  function asyncActionCreators<Params, Result, Error>(\n    type: string,\n    commonMeta?: Meta\n  ): AsyncActionCreators<Params, Result, Error> {\n    return {\n      type: base + type,\n      started: actionCreator<Params>(`${type}_STARTED`, commonMeta, false),\n      done: actionCreator<Success<Params, Result>>(`${type}_DONE`, commonMeta, false),\n      failed: actionCreator<Failure<Params, Error>>(`${type}_FAILED`, commonMeta, true),\n    };\n  }\n\n  return Object.assign(actionCreator, { async: asyncActionCreators });\n}\n\nexport default actionCreatorFactory;\n","import { call, put, select, take, cancel } from 'redux-saga/effects';\nimport { Action, ActionCreator } from './actionCreatorFactory';\nimport warning from 'tiny-warning/dist/tiny-warning.esm';\nimport { History } from 'history';\nimport { Dispatch } from 'redux';\n\nexport * from './actionCreatorFactory';\n\nexport interface SubscriptionAPI {\n  history: History;\n  dispatch: Dispatch<any>;\n}\n\nexport type Subscription = (api: SubscriptionAPI, done: Function) => void;\n\nexport interface SubscriptionsMapObject {\n  [key: string]: Subscription;\n}\n\nexport type Handler<InS extends OutS, OutS, P> = (state: InS, payload: P) => OutS;\n\ninterface Model<T> {\n  namespace: string;\n  state?: T;\n  reducers?: any;\n  effects?: any;\n  subscriptions?: any;\n}\n\nexport interface EffectsCommandMap {\n  put: typeof put;\n  call: typeof call;\n  select: typeof select;\n  take: typeof take;\n  cancel: typeof cancel;\n}\n\nexport type EffectsHandler<P> = (payload: P, effects: EffectsCommandMap) => IterableIterator<any>;\n\nexport type EffectsHandlerWithAction<P> = (\n  payload: Action<P>,\n  effects: EffectsCommandMap\n) => IterableIterator<any>;\n\nexport type EffectsWatcher = (effects: EffectsCommandMap) => IterableIterator<any>;\n\nexport class DvaModelBuilder<InS extends OutS, OutS = InS> {\n  private model: Model<OutS>;\n\n  constructor(initState: InS, namespace?: string) {\n    this.model = {\n      state: initState,\n      namespace,\n      effects: {},\n      reducers: {},\n      subscriptions: {},\n    };\n  }\n\n  case = <P>(actionCreator: ActionCreator<P>, handler: Handler<InS, OutS, P>) => {\n    this.checkType(actionCreator.type);\n    this.model.reducers[actionCreator.originType] = (state, action) =>\n      handler(state, action.payload);\n    return this;\n  };\n\n  caseWithAction = <P>(actionCreator: ActionCreator<P>, handler: Handler<InS, OutS, Action<P>>) => {\n    this.checkType(actionCreator.type);\n    this.model.reducers[actionCreator.originType] = handler;\n    return this;\n  };\n\n  takeEvery = <P>(actionCreator: ActionCreator<P>, handler: EffectsHandler<P>) => {\n    return this.setEffects(actionCreator, function*({ payload }, effects) {\n      yield handler(payload, effects);\n    });\n  };\n\n  takeEveryWithAction = <P>(\n    actionCreator: ActionCreator<P>,\n    handler: EffectsHandlerWithAction<P>\n  ) => {\n    return this.setEffects(actionCreator, handler);\n  };\n\n  takeLatest = <P>(actionCreator: ActionCreator<P>, handler: EffectsHandler<P>) => {\n    return this.setEffects(actionCreator, [\n      function*({ payload }, effects) {\n        yield handler(payload, effects);\n      },\n      { type: 'takeLatest' },\n    ]);\n  };\n\n  takeLatestWithAction = <P>(\n    actionCreator: ActionCreator<P>,\n    handler: EffectsHandlerWithAction<P>\n  ) => {\n    return this.setEffects(actionCreator, [handler, { type: 'takeLatest' }]);\n  };\n\n  throttle = <P>(actionCreator: ActionCreator<P>, handler: EffectsHandler<P>, ms?: number) => {\n    return this.setEffects(actionCreator, [\n      function*({ payload }, effects) {\n        yield handler(payload, effects);\n      },\n      { type: 'throttle', ms },\n    ]);\n  };\n\n  throttleWithAction = <P>(\n    actionCreator: ActionCreator<P>,\n    handler: EffectsHandlerWithAction<P>,\n    ms?: number\n  ) => {\n    return this.setEffects(actionCreator, [handler, { type: 'throttle', ms }]);\n  };\n\n  watcher = <P>(actionCreator: ActionCreator<P>, handler: EffectsWatcher) => {\n    return this.setEffects(actionCreator, [handler, { type: 'watcher' }]);\n  };\n\n  subscript = (func: Subscription) => {\n    let funcName = func.name;\n\n    warning(!!funcName, `some subscriptions in model ${this.model.namespace} don't have name`);\n    warning(!this.model.subscriptions[funcName], `duplicate  subscript function name ${funcName}`);\n\n    this.model.subscriptions[funcName] = func;\n    return this;\n  };\n\n  build = () => {\n    return this.model;\n  };\n\n  private setEffects = <P>(actionCreator: ActionCreator<P>, data: any) => {\n    this.checkType(actionCreator.type);\n    this.model.effects[actionCreator.originType] = data;\n    return this;\n  };\n\n  private checkType(type: string) {\n    const { namespace } = this.model;\n    if (namespace) {\n      const action = type.split('/');\n      warning(action.length === 2, `action ${type} in model \"${namespace}\" should have namespace`);\n      if (action.length === 2) {\n        warning(\n          action[0] === namespace,\n          `action \"${type}\" can't be effects or reducers in model \"${namespace}\"`\n        );\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"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"}